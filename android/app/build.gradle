plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    throw new GradleException("versionCode not found in local.properties")
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    throw new GradleException("versionName not found in local.properties")
}

def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (flutterMinSdkVersion == null) {
    throw new GradleException("minSdkVersion not found in local.properties")
}

def flutterCompileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion')
if (flutterCompileSdkVersion == null) {
    throw new GradleException("compileSdkVersion not found in local.properties")
}

def flutterTargetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion')
if (flutterTargetSdkVersion == null) {
    throw new GradleException("targetSdkVersion not found in local.properties")
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.tcg.fruitcraft.trading.card.game.battle"
    compileSdkVersion flutterCompileSdkVersion.toInteger()
    ndkVersion "25.2.9519653"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "default"

    defaultConfig {
        applicationId "com.tcg.fruitcraft.trading.card.game.battle"
        minSdkVersion flutterMinSdkVersion
        targetSdkVersion flutterTargetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
    }
    
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release 
        }
        debug
        {
            signingConfig signingConfigs.release 
        }
    }

    productFlavors {
        bazaar {
            dimension "default"
        }
        myket {
            dimension "default"
        }
        google {
            dimension "default"
        }
    }

    sourceSets {
        bazaar {
            manifest.srcFile 'src/bazaar/AndroidManifest.xml'
            main.java.srcDirs += 'src/main/kotlin'
        }
        myket {
            manifest.srcFile 'src/myket/AndroidManifest.xml'
            main.java.srcDirs += 'src/main/kotlin'
        }
        google {
            manifest.srcFile 'src/google/AndroidManifest.xml'
            main.java.srcDirs += 'src/main/kotlin'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
}
